{"title":"2nd Graph","markdown":{"yaml":{"title":"2nd Graph","format":"html","editor":"visual"},"headingText":"List of countries and dependencies by population","containsRefs":false,"markdown":"\n\n\nThe graph shows a list of countries and dependencies by population in 2018. This graph and dataset is from a [Wikipedia page](https://en.wikipedia.org/wiki/List_of_countries_and_dependencies_by_population#References).\n\n![Original Visualization](mapimage.png){fig-align=\"center\"}\n\nWhile the graph title says that the data is from 2018, there is updated data available in a table format on the same page.\n\nEach square in the graph represents 5000,000 people. The graph shows each country's population and percentage of the world along with a few states and cities. This map has also calculated the continent-wise population. The sizes are different than that of a regular map, it allows for easy comparison of population sizes around the world. You can quickly see how the population of **India** compares with, for example, **Nigeria** or **Brazil**, as the size of the country on the map is proportional to its population. This approach utilizes the available space well by resizing countries according to their population rather than land area. This way, smaller countries with large populations (e.g., Bangladesh, Japan) are still emphasized rather than getting lost in a traditional map.\n\n#### Flaws :\n\n1.  Since there is no proper outline for each country, some colours are harder to distinguish from each other.\n\n<!-- -->\n\n2.  Each country's colour has been assigned randomly and not according to their population sizes.\n3.  The graph looks way too crowded since the creator put the population size, percentage of world as well as the name of the country all on the map.\n4.  The square boxes representing 500,000 people are not actually needed, it also makes the map look glitchy and non-aesthetic.\n\nTo overcome these visualization flaws and to make it most user friendly, here are the redesigns.\n\n## Redesign Visualization 1.\n\n```{r,warning=FALSE, message=FALSE}\n#| echo: false\n#install all the required libraries\nlibrary(leaflet)\nlibrary(dplyr)\nlibrary(readr)\nlibrary(sf)\nlibrary(RColorBrewer)\nlibrary(htmltools)\n\n#reading the CSV file\ndata <- read_csv(\"countries_population.csv\",show_col_types = FALSE)\n\n#Cleaning the CSV file\ndata$Location <- gsub(\"_\", \" \", data$Location)\n\n#Creating the intervals\nbins <- c(0, 100000, 200000, 300000, 500000,\n          3000000, 5000000, 9000000, 11000000,\n          16000000, 20000000, 25000000, 40000000,\n          60000000, 67000000, 90000000, 200000000,\n          400000000, 1500000001)\n#Legend \nlabels <- c(\n  \"0 - 100,000\",\n  \"100,001 - 200,000\",\n  \"200,001 - 300,000\",\n  \"300,001 - 500,000\",\n  \"500,001 - 3,000,000\",\n  \"3,000,001 - 5,000,000\",\n  \"5,000,001 - 9,000,000\",\n  \"9,000,001 - 11,000,000\",\n  \"11,000,001 - 16,000,000\",\n  \"16,000,001 - 20,000,000\",\n  \"20,000,001 - 25,000,000\",\n  \"25,000,001 - 40,000,000\",\n  \"40,000,001 - 60,000,000\",\n  \"60,000,001 - 67,000,000\",\n  \"67,000,001 - 90,000,000\",\n  \"90,000,001 - 200,000,000\",\n  \"200,000,001 - 400,000,000\",\n  \"400,000,001 - 1,500,000,001\"\n)\n\ndata$population_group <- cut(data$Population, breaks = bins,\n                             include.lowest = TRUE,\n                             labels = labels)\n\n# We need colours for the number of intervels we have\nnum_colors <- length(labels)\n\ncolor_palette <- colorRampPalette(brewer.pal(9, \"Blues\"))  \ncolors <- color_palette(num_colors)\n\n#Importing the world dataset\nworld <- st_as_sf(maps::map(\"world\", fill = TRUE, plot = FALSE))\n\n#Left joining the world dataset with our.\nworld_data <- world %>%\n  left_join(data, by = c(\"ID\" = \"Location\")) %>%\n  mutate(color = colors[as.numeric(cut(Population, breaks = bins, include.lowest = TRUE))])\n\n\n# Visual 1\nleaflet_map <- leaflet(world_data) %>%\n  addTiles() %>%\n  setView(lng = 0, lat = 20, zoom = 2) %>%\n  addPolygons(fillColor = ~color,\n              weight = 1,\n              opacity = 1,\n              color = 'white',\n              dashArray = '3',\n              fillOpacity = 0.7,\n              highlightOptions = highlightOptions(\n                weight = 5,\n                color = '#666',\n                dashArray = '',\n                fillOpacity = 0.7,\n                bringToFront = TRUE),\n              label = ~paste(ID, \"<br>\",\n                             \"Population: \", Population, \"<br>\",\n                             \"% of World: \", `%_ofworld`),\n              labelOptions = labelOptions(style = list('font-weight' = 'normal', \n                                                       padding = '3px 8px'), \n                                          textsize = \"15px\", \n                                          direction = \"auto\")) %>%\n  addLegend(pal = colorFactor(colors, NULL), \n            values = ~population_group, \n            labels = labels,  # Update labels to show intervals\n            opacity = 0.7, \n            title = \"Population Groups\", position = \"bottomright\")\n\nleaflet_map\n\n```\n\n**Improvements:**\n\n1.  Each country is outlined with white break lines, this shows clear separation between countries.\n\n2.  This is an interactive map, when you zoom you can seen all the names of the country, state, cities.\n\n    This can be helpful later on for some analysis.\n\n3.  When you hover over the map it shows you the name of the country, the total population there and the percent of world it makes up. This information is not visible before hovering on that country, this keeps the map less cluttered.\n\n4.  The colours are in ombre dark blue to white shade, where dark blue are the densely populated countries and as the colour goes towards white those are lesser populated areas.\n\n5.  The colours are given based on certain intervals which I chose by looking at the dataset.\n\n6.  The sizes of each country is true to the real map size so that people won't get confused by seeing offset sizes.\n\nOne piece of information that this redesign does not have is the population of continents. To overcome this flaw we can use a Drilldown chart.\n\n## Redesign Visualization 2.\n\nThis graph starts out with a bar graph of the total population of each continent.\n\n1.  It gives us the data we were missing out on by doing just maps.\n2.  This is also an interactieve graph, when you click on the desired continent the graph changes and shows the population of all the countries that come under that continent.\n3.  The bar graph is arranged in descending order.\n4.  The bar graph type visualization make it very easy to notice which continent has the most population , which countries are more populated ect with just a look at the visualization.\n\n```{r,message=FALSE, warning=FALSE}\n#| echo: false\nlibrary(dplyr)\nlibrary(purrr)\nlibrary(highcharter)\n\ndata1 <- read.csv(\"countries_population_continents.csv\")\n\n# Group the data by continent and summarize the total population for each continent\nby_continent <- data1 %>%\n  group_by(Continent) %>%\n  summarise(Population = sum(Population, na.rm = TRUE), .groups = 'drop')\n\n#Prepare drilldown data for Africa\ndrilldown_chart_data <- data1 %>%\n  filter(Continent == \"Africa\") %>%\n  select(Location, Population) %>% \n  mutate(\n    name = Location,\n    y = Population\n  ) %>%\n  select(name, y) %>%\n  list_parse()  \n\n# Create the main Highcharts visualization\nhighchart() %>%\n  hc_chart(type = \"column\") %>%\n  hc_title(text = \"Population Drilldown by Continent and Country\") %>%\n  hc_subtitle(text = \"Click a continent to see the countries\") %>%\n  hc_xAxis(type = \"category\") %>%\n  hc_yAxis(title = list(text = \"Population\")) %>%\n  # Add the main series for continents\n  hc_add_series(\n    name = \"Total Population\", \n    data = by_continent %>%\n      mutate(drilldown = Continent) %>%\n      select(name = Continent, y = Population, drilldown)\n  ) %>%\n  # the drilldown feature for Africa\n  hc_drilldown(series = list(\n    list(\n      id = \"Africa\",\n      name = \"Countries\",\n      data = drilldown_chart_data\n    )\n  ))\n\n```\n\n**Special efforts:**\n\nThe data set was web-scrapped from wikipedia page table. After the data was scrapped, it was cleaned by removing spaces and '\\_'.\n\nSome letters had to be rewritten manually since accented letters were not recognized.\n\nCreated interactive plots to enhance customer/user experience.\n\nUsed a website to learn how to do Drilldown charts.\n\nHad to mutate the dataset by mapping continents to the different countries for the second visualization\n","srcMarkdownNoYaml":"\n\n## List of countries and dependencies by population\n\nThe graph shows a list of countries and dependencies by population in 2018. This graph and dataset is from a [Wikipedia page](https://en.wikipedia.org/wiki/List_of_countries_and_dependencies_by_population#References).\n\n![Original Visualization](mapimage.png){fig-align=\"center\"}\n\nWhile the graph title says that the data is from 2018, there is updated data available in a table format on the same page.\n\nEach square in the graph represents 5000,000 people. The graph shows each country's population and percentage of the world along with a few states and cities. This map has also calculated the continent-wise population. The sizes are different than that of a regular map, it allows for easy comparison of population sizes around the world. You can quickly see how the population of **India** compares with, for example, **Nigeria** or **Brazil**, as the size of the country on the map is proportional to its population. This approach utilizes the available space well by resizing countries according to their population rather than land area. This way, smaller countries with large populations (e.g., Bangladesh, Japan) are still emphasized rather than getting lost in a traditional map.\n\n#### Flaws :\n\n1.  Since there is no proper outline for each country, some colours are harder to distinguish from each other.\n\n<!-- -->\n\n2.  Each country's colour has been assigned randomly and not according to their population sizes.\n3.  The graph looks way too crowded since the creator put the population size, percentage of world as well as the name of the country all on the map.\n4.  The square boxes representing 500,000 people are not actually needed, it also makes the map look glitchy and non-aesthetic.\n\nTo overcome these visualization flaws and to make it most user friendly, here are the redesigns.\n\n## Redesign Visualization 1.\n\n```{r,warning=FALSE, message=FALSE}\n#| echo: false\n#install all the required libraries\nlibrary(leaflet)\nlibrary(dplyr)\nlibrary(readr)\nlibrary(sf)\nlibrary(RColorBrewer)\nlibrary(htmltools)\n\n#reading the CSV file\ndata <- read_csv(\"countries_population.csv\",show_col_types = FALSE)\n\n#Cleaning the CSV file\ndata$Location <- gsub(\"_\", \" \", data$Location)\n\n#Creating the intervals\nbins <- c(0, 100000, 200000, 300000, 500000,\n          3000000, 5000000, 9000000, 11000000,\n          16000000, 20000000, 25000000, 40000000,\n          60000000, 67000000, 90000000, 200000000,\n          400000000, 1500000001)\n#Legend \nlabels <- c(\n  \"0 - 100,000\",\n  \"100,001 - 200,000\",\n  \"200,001 - 300,000\",\n  \"300,001 - 500,000\",\n  \"500,001 - 3,000,000\",\n  \"3,000,001 - 5,000,000\",\n  \"5,000,001 - 9,000,000\",\n  \"9,000,001 - 11,000,000\",\n  \"11,000,001 - 16,000,000\",\n  \"16,000,001 - 20,000,000\",\n  \"20,000,001 - 25,000,000\",\n  \"25,000,001 - 40,000,000\",\n  \"40,000,001 - 60,000,000\",\n  \"60,000,001 - 67,000,000\",\n  \"67,000,001 - 90,000,000\",\n  \"90,000,001 - 200,000,000\",\n  \"200,000,001 - 400,000,000\",\n  \"400,000,001 - 1,500,000,001\"\n)\n\ndata$population_group <- cut(data$Population, breaks = bins,\n                             include.lowest = TRUE,\n                             labels = labels)\n\n# We need colours for the number of intervels we have\nnum_colors <- length(labels)\n\ncolor_palette <- colorRampPalette(brewer.pal(9, \"Blues\"))  \ncolors <- color_palette(num_colors)\n\n#Importing the world dataset\nworld <- st_as_sf(maps::map(\"world\", fill = TRUE, plot = FALSE))\n\n#Left joining the world dataset with our.\nworld_data <- world %>%\n  left_join(data, by = c(\"ID\" = \"Location\")) %>%\n  mutate(color = colors[as.numeric(cut(Population, breaks = bins, include.lowest = TRUE))])\n\n\n# Visual 1\nleaflet_map <- leaflet(world_data) %>%\n  addTiles() %>%\n  setView(lng = 0, lat = 20, zoom = 2) %>%\n  addPolygons(fillColor = ~color,\n              weight = 1,\n              opacity = 1,\n              color = 'white',\n              dashArray = '3',\n              fillOpacity = 0.7,\n              highlightOptions = highlightOptions(\n                weight = 5,\n                color = '#666',\n                dashArray = '',\n                fillOpacity = 0.7,\n                bringToFront = TRUE),\n              label = ~paste(ID, \"<br>\",\n                             \"Population: \", Population, \"<br>\",\n                             \"% of World: \", `%_ofworld`),\n              labelOptions = labelOptions(style = list('font-weight' = 'normal', \n                                                       padding = '3px 8px'), \n                                          textsize = \"15px\", \n                                          direction = \"auto\")) %>%\n  addLegend(pal = colorFactor(colors, NULL), \n            values = ~population_group, \n            labels = labels,  # Update labels to show intervals\n            opacity = 0.7, \n            title = \"Population Groups\", position = \"bottomright\")\n\nleaflet_map\n\n```\n\n**Improvements:**\n\n1.  Each country is outlined with white break lines, this shows clear separation between countries.\n\n2.  This is an interactive map, when you zoom you can seen all the names of the country, state, cities.\n\n    This can be helpful later on for some analysis.\n\n3.  When you hover over the map it shows you the name of the country, the total population there and the percent of world it makes up. This information is not visible before hovering on that country, this keeps the map less cluttered.\n\n4.  The colours are in ombre dark blue to white shade, where dark blue are the densely populated countries and as the colour goes towards white those are lesser populated areas.\n\n5.  The colours are given based on certain intervals which I chose by looking at the dataset.\n\n6.  The sizes of each country is true to the real map size so that people won't get confused by seeing offset sizes.\n\nOne piece of information that this redesign does not have is the population of continents. To overcome this flaw we can use a Drilldown chart.\n\n## Redesign Visualization 2.\n\nThis graph starts out with a bar graph of the total population of each continent.\n\n1.  It gives us the data we were missing out on by doing just maps.\n2.  This is also an interactieve graph, when you click on the desired continent the graph changes and shows the population of all the countries that come under that continent.\n3.  The bar graph is arranged in descending order.\n4.  The bar graph type visualization make it very easy to notice which continent has the most population , which countries are more populated ect with just a look at the visualization.\n\n```{r,message=FALSE, warning=FALSE}\n#| echo: false\nlibrary(dplyr)\nlibrary(purrr)\nlibrary(highcharter)\n\ndata1 <- read.csv(\"countries_population_continents.csv\")\n\n# Group the data by continent and summarize the total population for each continent\nby_continent <- data1 %>%\n  group_by(Continent) %>%\n  summarise(Population = sum(Population, na.rm = TRUE), .groups = 'drop')\n\n#Prepare drilldown data for Africa\ndrilldown_chart_data <- data1 %>%\n  filter(Continent == \"Africa\") %>%\n  select(Location, Population) %>% \n  mutate(\n    name = Location,\n    y = Population\n  ) %>%\n  select(name, y) %>%\n  list_parse()  \n\n# Create the main Highcharts visualization\nhighchart() %>%\n  hc_chart(type = \"column\") %>%\n  hc_title(text = \"Population Drilldown by Continent and Country\") %>%\n  hc_subtitle(text = \"Click a continent to see the countries\") %>%\n  hc_xAxis(type = \"category\") %>%\n  hc_yAxis(title = list(text = \"Population\")) %>%\n  # Add the main series for continents\n  hc_add_series(\n    name = \"Total Population\", \n    data = by_continent %>%\n      mutate(drilldown = Continent) %>%\n      select(name = Continent, y = Population, drilldown)\n  ) %>%\n  # the drilldown feature for Africa\n  hc_drilldown(series = list(\n    list(\n      id = \"Africa\",\n      name = \"Countries\",\n      data = drilldown_chart_data\n    )\n  ))\n\n```\n\n**Special efforts:**\n\nThe data set was web-scrapped from wikipedia page table. After the data was scrapped, it was cleaned by removing spaces and '\\_'.\n\nSome letters had to be rewritten manually since accented letters were not recognized.\n\nCreated interactive plots to enhance customer/user experience.\n\nUsed a website to learn how to do Drilldown charts.\n\nHad to mutate the dataset by mapping continents to the different countries for the second visualization\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"output-file":"Map.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.5.57","theme":"cosmo","title":"2nd Graph","editor":"visual"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}
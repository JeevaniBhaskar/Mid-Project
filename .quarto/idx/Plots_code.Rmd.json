{"title":"Untitled","markdown":{"yaml":{"title":"Untitled","author":"Jeevani Bhaskar","date":"2024-10-09","output":"html_document"},"headingText":"Read the CSV file","containsRefs":false,"markdown":"\n\n```{r}\ndata = read.csv(\"Data.csv\")\n```\n\n\n```{r}\n# Preview the data\nhead(data)\n```\n\n```{r}\n# Install and load the required packages\n```\n\n\n```{r}\nlibrary(ggplot2)\n```\n\n\n```{r}\n# Filter the data for the years 2019 and 2020\ndata_filtered <- data[data$Year %in% c(2019, 2020), ]\n\n# Create a bar plot comparing the losses for 2019 and 2020 by country\nggplot(data_filtered, aes(x = Country, y = Loss.in.Billion, fill = as.factor(Year))) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  labs(title = \"Loss Comparison by Country for 2019 and 2020\",\n       x = \"Country\", y = \"Loss in Billion\", fill = \"Year\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n```\n\n```{r}\n# Calculate the difference between 2019 and 2020 losses for each country\nlibrary(tidyr) # for spread function\ndata_diff <- spread(data_filtered, Year, Loss.in.Billion)\ndata_diff$Difference <- data_diff$`2019` - data_diff$`2020`\n\n# Create a bar plot showing the difference in loss between 2019 and 2020\nggplot(data_diff, aes(x = Country, y = Difference)) +\n  geom_bar(stat = \"identity\", fill = \"steelblue\") +\n  labs(title = \"Difference in Loss Between 2019 and 2020 by Country\",\n       x = \"Country\", y = \"Difference in Loss (Billion)\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n```\n\nTake 2\n```{r}\n# Load necessary libraries\nlibrary(ggplot2)\n\n# Create the plot and assign it to an object called plot1\nplot1 = ggplot(data_filtered, aes(x = Country, y = Loss.in.Billion, fill = as.factor(Year))) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  \n  # Add text labels on top of the bars showing the exact loss values\n  geom_text(aes(label = Loss.in.Billion), \n            position = position_dodge(width = 0.9), \n            vjust = -0.5) +  # Adjust vertical position of labels\n  \n  # Use custom colors: purple for 2019 and yellow for 2020\n  scale_fill_manual(values = c(\"2019\" = \"purple\", \"2020\" = \"yellow\")) +\n  \n  # Set labels and theme\n  labs(title = \"Loss Comparison by Country for 2019 and 2020\",\n       x = \"Country\", y = \"Loss in Billion\", fill = \"Year\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\nprint(plot1)\n```\n\n```{r}\nggsave(\"C:\\\\Users\\\\jeeva\\\\OneDrive\\\\Desktop\\\\STAT - First sem\\\\Mid Project\\\\Mid Project\\\\plot1_high_res.png\", plot = plot1, dpi = 300, width = 14, height = 8, units = \"in\")\n```\n\n\n```{r}\n# Load necessary libraries\nlibrary(tidyr)  # for spread function\nlibrary(ggplot2)  # for plotting\n\n# Spread data to have years as columns\ndata_diff <- spread(data_filtered, Year, Loss.in.Billion)\n\n# Calculate the difference\ndata_diff$Difference <- data_diff$`2019` - data_diff$`2020`\n\n# Create a bar plot showing the difference in loss between 2019 and 2020\nggplot(data_diff, aes(x = Country, y = Difference)) +\n  geom_bar(stat = \"identity\", fill = \"brown2\") +\n  labs(title = \"Comparative Analysis of Loss by Country\",  # Fixed spelling of 'Comparative'\n       x = \"Country\", y = \"Difference in Loss (Billion)\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1),\n        plot.title = element_text(hjust = 0.5)) +  # Center the title\n  geom_text(aes(label = Difference), vjust = -0.5, color = \"black\")  # Add values on top of the bars\n\n\n```\n```{r}\n# Load necessary libraries\nlibrary(tidyr)  # for spread function\nlibrary(ggplot2)  # for plotting\n\n# Spread data to have years as columns\ndata_diff <- spread(data_filtered, Year, Loss.in.Billion)\n\n# Calculate the absolute percentage difference\ndata_diff$Percentage_Difference <- (abs(data_diff$`2020` - data_diff$`2019`) / data_diff$`2019`) * 100\n\n# Create a bar plot showing the absolute percentage difference in loss between 2019 and 2020\nggplot(data_diff, aes(x = Country, y = Percentage_Difference)) +\n  geom_bar(stat = \"identity\", fill = \"brown2\") +\n  labs(title = \"Comparative Analysis of Loss by Country in Percentage\",\n       x = \"Country\", y = \"Percentage Difference in Loss (%)\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1),\n        plot.title = element_text(hjust = 0.5)) +  # Center the title\n  geom_text(aes(label = round(Percentage_Difference, 1)), vjust = -0.5, color = \"black\")  # Add values on top of the bars\n\n```\n```{r}\n# Load necessary libraries\nlibrary(tidyr)  # for spread function\nlibrary(ggplot2)  # for plotting\nlibrary(dplyr)  # for data manipulation\n\n# Spread data to have years as columns\ndata_diff <- spread(data_filtered, Year, Loss.in.Billion)\n\n# Calculate the absolute percentage difference and rename it\ndata_diff$Loss_Percentage <- (abs(data_diff$`2020` - data_diff$`2019`) / data_diff$`2019`) * 100\n\n# Create a bar plot showing the absolute percentage difference in loss between 2019 and 2020\nplot2 = ggplot(data_diff, aes(x = reorder(Country, Loss_Percentage), y = Loss_Percentage, fill = Loss_Percentage)) +\n  geom_bar(stat = \"identity\") +\n  scale_fill_gradient(low = \"lightblue\", high = \"darkblue\") +  # Light to dark gradient\n  labs(title = \"Comparative Analysis of Loss by Country in Percentage\",\n       x = \"Country\", y = \"Loss (%)\") +  # Updated y-axis label\n  theme(axis.text.x = element_text(angle = 45, hjust = 1),\n        plot.title = element_text(hjust = 0.5)) +  # Center the title\n  geom_text(aes(label = round(Loss_Percentage, 1)), vjust = -0.5, color = \"black\")  # Add values on top of the bars\nprint(plot2)\n```\n```{r}\nggsave(\"C:\\\\Users\\\\jeeva\\\\OneDrive\\\\Desktop\\\\STAT - First sem\\\\Mid Project\\\\Mid Project\\\\plot2_high_res.png\", plot = plot2, dpi = 300, width = 14, height = 8, units = \"in\")\n```\n\n```{r}\noptions(repos = c(CRAN = \"https://cran.rstudio.com/\"))\n\ninstall.packages(\"plotly\")  # Uncomment this line to install the package\nlibrary(plotly)\n\n```\n\n```{r}\n#3 Load necessary libraries\nlibrary(ggplot2)\nlibrary(plotly)\n\n# Create the plot and assign it to an object called plot1\nplot1 <- ggplot(data_filtered, aes(x = Country, y = Loss.in.Billion, fill = as.factor(Year))) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  \n  # Add text labels on top of the bars showing the exact loss values\n  geom_text(aes(label = Loss.in.Billion), \n            position = position_dodge(width = 0.9), \n            vjust = -0.5) +  # Adjust vertical position of labels\n  \n  # Use custom colors: purple for 2019 and yellow for 2020\n  scale_fill_manual(values = c(\"2019\" = \"purple\", \"2020\" = \"yellow\")) +\n  \n  # Set labels and theme\n  labs(title = \"Loss Comparison by Country for 2019 and 2020\",\n       x = \"Country\", y = \"Loss in Billion\", fill = \"Year\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n# Convert to an interactive plot\nplotly_plot <- ggplotly(plot1)\n\n# Print the interactive plot\nprint(plotly_plot)\n```\n```{r}\ninstall.packages(\"htmlwidgets\")\n```\n\n```{r}\n#3 Load necessary libraries\nlibrary(ggplot2)\nlibrary(plotly)\n# Save the interactive plot as an HTML file\nlibrary(htmlwidgets)\n\n# Create the plot and assign it to an object called plot1\nplot1 <- ggplot(data_filtered, aes(x = Country, y = Loss.in.Billion, fill = as.factor(Year))) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  \n  # Add text labels on top of the bars showing the exact loss values\n  geom_text(aes(label = Loss.in.Billion), \n            position = position_dodge(width = 0.9), \n            vjust = -0.5) +  # Adjust vertical position of labels\n  \n  # Use custom colors: purple for 2019 and yellow for 2020\n  scale_fill_manual(values = c(\"2019\" = \"purple\", \"2020\" = \"yellow\")) +\n  \n  # Set labels and theme\n  labs(title = \"Loss Comparison by Country for 2019 and 2020\",\n       x = \"Country\", y = \"Loss in Billion\", fill = \"Year\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n# Convert to an interactive plot\nplotly_plot <- ggplotly(plot1)\n\n# Print the interactive plot\nprint(plotly_plot)\n\n# Save plot as an HTML file\nsaveWidget(plotly_plot, \"interactive_plot.html\", selfcontained = TRUE)\n\n```\n\n\n```{r}\n```\n\n","srcMarkdownNoYaml":"\n\n```{r}\n# Read the CSV file\ndata = read.csv(\"Data.csv\")\n```\n\n\n```{r}\n# Preview the data\nhead(data)\n```\n\n```{r}\n# Install and load the required packages\n```\n\n\n```{r}\nlibrary(ggplot2)\n```\n\n\n```{r}\n# Filter the data for the years 2019 and 2020\ndata_filtered <- data[data$Year %in% c(2019, 2020), ]\n\n# Create a bar plot comparing the losses for 2019 and 2020 by country\nggplot(data_filtered, aes(x = Country, y = Loss.in.Billion, fill = as.factor(Year))) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  labs(title = \"Loss Comparison by Country for 2019 and 2020\",\n       x = \"Country\", y = \"Loss in Billion\", fill = \"Year\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n```\n\n```{r}\n# Calculate the difference between 2019 and 2020 losses for each country\nlibrary(tidyr) # for spread function\ndata_diff <- spread(data_filtered, Year, Loss.in.Billion)\ndata_diff$Difference <- data_diff$`2019` - data_diff$`2020`\n\n# Create a bar plot showing the difference in loss between 2019 and 2020\nggplot(data_diff, aes(x = Country, y = Difference)) +\n  geom_bar(stat = \"identity\", fill = \"steelblue\") +\n  labs(title = \"Difference in Loss Between 2019 and 2020 by Country\",\n       x = \"Country\", y = \"Difference in Loss (Billion)\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n```\n\nTake 2\n```{r}\n# Load necessary libraries\nlibrary(ggplot2)\n\n# Create the plot and assign it to an object called plot1\nplot1 = ggplot(data_filtered, aes(x = Country, y = Loss.in.Billion, fill = as.factor(Year))) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  \n  # Add text labels on top of the bars showing the exact loss values\n  geom_text(aes(label = Loss.in.Billion), \n            position = position_dodge(width = 0.9), \n            vjust = -0.5) +  # Adjust vertical position of labels\n  \n  # Use custom colors: purple for 2019 and yellow for 2020\n  scale_fill_manual(values = c(\"2019\" = \"purple\", \"2020\" = \"yellow\")) +\n  \n  # Set labels and theme\n  labs(title = \"Loss Comparison by Country for 2019 and 2020\",\n       x = \"Country\", y = \"Loss in Billion\", fill = \"Year\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\nprint(plot1)\n```\n\n```{r}\nggsave(\"C:\\\\Users\\\\jeeva\\\\OneDrive\\\\Desktop\\\\STAT - First sem\\\\Mid Project\\\\Mid Project\\\\plot1_high_res.png\", plot = plot1, dpi = 300, width = 14, height = 8, units = \"in\")\n```\n\n\n```{r}\n# Load necessary libraries\nlibrary(tidyr)  # for spread function\nlibrary(ggplot2)  # for plotting\n\n# Spread data to have years as columns\ndata_diff <- spread(data_filtered, Year, Loss.in.Billion)\n\n# Calculate the difference\ndata_diff$Difference <- data_diff$`2019` - data_diff$`2020`\n\n# Create a bar plot showing the difference in loss between 2019 and 2020\nggplot(data_diff, aes(x = Country, y = Difference)) +\n  geom_bar(stat = \"identity\", fill = \"brown2\") +\n  labs(title = \"Comparative Analysis of Loss by Country\",  # Fixed spelling of 'Comparative'\n       x = \"Country\", y = \"Difference in Loss (Billion)\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1),\n        plot.title = element_text(hjust = 0.5)) +  # Center the title\n  geom_text(aes(label = Difference), vjust = -0.5, color = \"black\")  # Add values on top of the bars\n\n\n```\n```{r}\n# Load necessary libraries\nlibrary(tidyr)  # for spread function\nlibrary(ggplot2)  # for plotting\n\n# Spread data to have years as columns\ndata_diff <- spread(data_filtered, Year, Loss.in.Billion)\n\n# Calculate the absolute percentage difference\ndata_diff$Percentage_Difference <- (abs(data_diff$`2020` - data_diff$`2019`) / data_diff$`2019`) * 100\n\n# Create a bar plot showing the absolute percentage difference in loss between 2019 and 2020\nggplot(data_diff, aes(x = Country, y = Percentage_Difference)) +\n  geom_bar(stat = \"identity\", fill = \"brown2\") +\n  labs(title = \"Comparative Analysis of Loss by Country in Percentage\",\n       x = \"Country\", y = \"Percentage Difference in Loss (%)\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1),\n        plot.title = element_text(hjust = 0.5)) +  # Center the title\n  geom_text(aes(label = round(Percentage_Difference, 1)), vjust = -0.5, color = \"black\")  # Add values on top of the bars\n\n```\n```{r}\n# Load necessary libraries\nlibrary(tidyr)  # for spread function\nlibrary(ggplot2)  # for plotting\nlibrary(dplyr)  # for data manipulation\n\n# Spread data to have years as columns\ndata_diff <- spread(data_filtered, Year, Loss.in.Billion)\n\n# Calculate the absolute percentage difference and rename it\ndata_diff$Loss_Percentage <- (abs(data_diff$`2020` - data_diff$`2019`) / data_diff$`2019`) * 100\n\n# Create a bar plot showing the absolute percentage difference in loss between 2019 and 2020\nplot2 = ggplot(data_diff, aes(x = reorder(Country, Loss_Percentage), y = Loss_Percentage, fill = Loss_Percentage)) +\n  geom_bar(stat = \"identity\") +\n  scale_fill_gradient(low = \"lightblue\", high = \"darkblue\") +  # Light to dark gradient\n  labs(title = \"Comparative Analysis of Loss by Country in Percentage\",\n       x = \"Country\", y = \"Loss (%)\") +  # Updated y-axis label\n  theme(axis.text.x = element_text(angle = 45, hjust = 1),\n        plot.title = element_text(hjust = 0.5)) +  # Center the title\n  geom_text(aes(label = round(Loss_Percentage, 1)), vjust = -0.5, color = \"black\")  # Add values on top of the bars\nprint(plot2)\n```\n```{r}\nggsave(\"C:\\\\Users\\\\jeeva\\\\OneDrive\\\\Desktop\\\\STAT - First sem\\\\Mid Project\\\\Mid Project\\\\plot2_high_res.png\", plot = plot2, dpi = 300, width = 14, height = 8, units = \"in\")\n```\n\n```{r}\noptions(repos = c(CRAN = \"https://cran.rstudio.com/\"))\n\ninstall.packages(\"plotly\")  # Uncomment this line to install the package\nlibrary(plotly)\n\n```\n\n```{r}\n#3 Load necessary libraries\nlibrary(ggplot2)\nlibrary(plotly)\n\n# Create the plot and assign it to an object called plot1\nplot1 <- ggplot(data_filtered, aes(x = Country, y = Loss.in.Billion, fill = as.factor(Year))) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  \n  # Add text labels on top of the bars showing the exact loss values\n  geom_text(aes(label = Loss.in.Billion), \n            position = position_dodge(width = 0.9), \n            vjust = -0.5) +  # Adjust vertical position of labels\n  \n  # Use custom colors: purple for 2019 and yellow for 2020\n  scale_fill_manual(values = c(\"2019\" = \"purple\", \"2020\" = \"yellow\")) +\n  \n  # Set labels and theme\n  labs(title = \"Loss Comparison by Country for 2019 and 2020\",\n       x = \"Country\", y = \"Loss in Billion\", fill = \"Year\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n# Convert to an interactive plot\nplotly_plot <- ggplotly(plot1)\n\n# Print the interactive plot\nprint(plotly_plot)\n```\n```{r}\ninstall.packages(\"htmlwidgets\")\n```\n\n```{r}\n#3 Load necessary libraries\nlibrary(ggplot2)\nlibrary(plotly)\n# Save the interactive plot as an HTML file\nlibrary(htmlwidgets)\n\n# Create the plot and assign it to an object called plot1\nplot1 <- ggplot(data_filtered, aes(x = Country, y = Loss.in.Billion, fill = as.factor(Year))) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  \n  # Add text labels on top of the bars showing the exact loss values\n  geom_text(aes(label = Loss.in.Billion), \n            position = position_dodge(width = 0.9), \n            vjust = -0.5) +  # Adjust vertical position of labels\n  \n  # Use custom colors: purple for 2019 and yellow for 2020\n  scale_fill_manual(values = c(\"2019\" = \"purple\", \"2020\" = \"yellow\")) +\n  \n  # Set labels and theme\n  labs(title = \"Loss Comparison by Country for 2019 and 2020\",\n       x = \"Country\", y = \"Loss in Billion\", fill = \"Year\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n# Convert to an interactive plot\nplotly_plot <- ggplotly(plot1)\n\n# Print the interactive plot\nprint(plotly_plot)\n\n# Save plot as an HTML file\nsaveWidget(plotly_plot, \"interactive_plot.html\", selfcontained = TRUE)\n\n```\n\n\n```{r}\n```\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":"html_document","warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"output-file":"Plots_code.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.5.57","theme":"cosmo","title":"Untitled","author":"Jeevani Bhaskar","date":"2024-10-09"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}
{"title":"R Code","markdown":{"yaml":{"title":"R Code","editor":"visual"},"headingText":"Code for visualizing the negative economic impact of COVID-19 on tourism","containsRefs":false,"markdown":"\n\n\n### Plot 1\n\n#Reading the csv file into a variable called data\n\ndata = read.csv(\"Data.csv\")\n\n#Filtering the data for the years 2019 and 2020\n\ndata_filtered = data\\[data\\$Year %in% c(2019, 2020), \\]\n\n#Loading the necessary libraries, ggplot2 and plotly\n\nlibrary(ggplot2)\n\nlibrary(plotly)\n\n#Assigning the graph to a variable called plot1. Initializing ggplot and defining the asthetics. geom_bar adds the bar chart to the plot. Year is converted as factor and the bars are filled with colors based on the year\n\nplot1 = ggplot(data_filtered, aes(x = Country, y = Loss.in.Billion, fill = as.factor(Year))) + geom_bar(stat = \"identity\", position = \"dodge\") +\n\n#goem_text adds the labels to the plot. asthetics are defined and the width of the txt labels is adjusted using position_dodge.\n\ngeom_text(aes(label = Loss.in.Billion), position = position_dodge(width = 0.9), vjust = -0.5) + \\# Adjust vertical position of labels\n\n#scale_fill_manual is used to set the colors manually\n\nscale_fill_manual(values = c(\"2019\" = \"purple\", \"2020\" = \"yellow\")) +\n\n#labs is used to add the labels and title to the chart. Theme customizes the appearance of the plot.\n\nlabs(title = \"Loss Comparison by Country for 2019 and 2020\", x = \"Country\", y = \"Loss in Billion\", fill = \"Year\") + theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n#Converting plot1 to an interactive plotly object using ggplotly\n\nplotly_plot = ggplotly(plot1)\n\n#printing the plot\n\nprint(plotly_plot)\n\n### Plot 2\n\n#loading the necessary libraries tidyr, dplyr\n\nlibrary(tidyr)\n\nlibrary(dplyr)\n\n#Reshaping the data\n\ndata_diff = spread(data_filtered, Year, Loss.in.Billion)\n\n#Taking the absolute difference between the years and calculating the loss percentage\n\ndata_diff\\$Loss_Percentage \\<- (abs(data_diff\\$`2020` - data_diff\\$\\`2019\\`) / data_diff\\$`2019`) \\* 100\n\n#Assigning the graph to a variable called plot2. Initializing ggplot and defining the asthetics. reorder() function arranges the countries in ascending orderof their loss percentage.\n\nplot2 = ggplot(data_diff, aes(x = reorder(Country, Loss_Percentage), y = Loss_Percentage, fill = Loss_Percentage)) +\n\n#geom_bar adds the bar chart to the plot. stat = \"identity adds the bars heights corresponds to the values of loss_percenatge. scale_fill_gradient() adds continuous color gradient for bars with lower to higher loss percentage,\n\ngeom_bar(stat = \"identity\") + scale_fill_gradient(low = \"lightblue\", high = \"darkblue\") +\n\n#Adding lables, title and customized theme\n\nlabs(title = \"Comparative Analysis of Loss by Country in Percentage\", x = \"Country\", y = \"Loss (%)\") + label theme(axis.text.x = element_text(angle = 45, hjust = 1), plot.title = element_text(hjust = 0.5)) +\n\n#Adding text labels to the bars. Adjusting the verticle position of the labels using vjust and adding color. The loss_percentage displayed is rounded to one decimal place.\n\ngeom_text(aes(label = round(Loss_Percentage, 1)), vjust = -0.5, color = \"black\") \\# Add values on top of the bars print(plot2)\n\n## Code for List of Countries and Dependencies by Population\n\n### Plot 1\n\n#install all the required libraries\n\nlibrary(leaflet)\n\nlibrary(dplyr)\n\nlibrary(readr)\n\nlibrary(sf)\n\nlibrary(RColorBrewer)\n\nlibrary(htmltools)\n\n#reading the CSV file\n\ndata \\<- read_csv(\"countries_population.csv\",show_col_types = FALSE)\n\n#Cleaning the CSV file\n\ndata\\$Location \\<- gsub(\"\\_\", \" \", data\\$Location)\n\n#Creating the intervals\n\nbins \\<- c(0, 100000, 200000, 300000, 500000,\n\n          3000000, 5000000, 9000000, 11000000,\n\n          16000000, 20000000, 25000000, 40000000,\n\n          60000000, 67000000, 90000000, 200000000,\n\n          400000000, 1500000001)\n\n#Legend\n\nlabels \\<- c(\n\n  \"0 - 100,000\",\n\n  \"100,001 - 200,000\",\n\n  \"200,001 - 300,000\",\n\n  \"300,001 - 500,000\",\n\n  \"500,001 - 3,000,000\",\n\n  \"3,000,001 - 5,000,000\",\n\n  \"5,000,001 - 9,000,000\",\n\n  \"9,000,001 - 11,000,000\",\n\n  \"11,000,001 - 16,000,000\",\n\n  \"16,000,001 - 20,000,000\",\n\n  \"20,000,001 - 25,000,000\",\n\n  \"25,000,001 - 40,000,000\",\n\n  \"40,000,001 - 60,000,000\",\n\n  \"60,000,001 - 67,000,000\",\n\n  \"67,000,001 - 90,000,000\",\n\n  \"90,000,001 - 200,000,000\",\n\n  \"200,000,001 - 400,000,000\",\n\n  \"400,000,001 - 1,500,000,001\"\n\n)\n\ndata\\$population_group \\<- cut(data\\$Population, breaks = bins,\n\n                             include.lowest = TRUE,\n\n                             labels = labels)\n\n\\# We need colours for the number of intervels we have\n\nnum_colors \\<- length(labels)\n\ncolor_palette \\<- colorRampPalette(brewer.pal(9, \"Blues\")) \n\ncolors \\<- color_palette(num_colors)\n\n#Importing the world dataset\n\nworld \\<- st_as_sf(maps::map(\"world\", fill = TRUE, plot = FALSE))\n\n#Left joining the world dataset with our.\n\nworld_data \\<- world %\\>%\n\n  left_join(data, by = c(\"ID\" = \"Location\")) %\\>%\n\n  mutate(color = colors\\[as.numeric(cut(Population, breaks = bins, include.lowest = TRUE))\\])\n\n\\# Visual 1\n\nleaflet_map \\<- leaflet(world_data) %\\>%\n\n  addTiles() %\\>%\n\n  setView(lng = 0, lat = 20, zoom = 2) %\\>%\n\n  addPolygons(fillColor = \\~color,\n\n              weight = 1,\n\n              opacity = 1,\n\n              color = 'white',\n\n              dashArray = '3',\n\n              fillOpacity = 0.7,\n\n              highlightOptions = highlightOptions(\n\n                weight = 5,\n\n                color = '#666',\n\n                dashArray = '',\n\n                fillOpacity = 0.7,\n\n                bringToFront = TRUE),\n\n              label = \\~paste(ID, \"\\<br\\>\",\n\n                             \"Population: \", Population, \"\\<br\\>\",\n\n                             \"% of World: \", \\`%\\_ofworld\\`),\n\n              labelOptions = labelOptions(style = list('font-weight' = 'normal',\n\n                                                       padding = '3px 8px'),\n\n                                          textsize = \"15px\",\n\n                                          direction = \"auto\")) %\\>%\n\n  addLegend(pal = colorFactor(colors, NULL),\n\n            values = \\~population_group,\n\n            labels = labels,  \\# Update labels to show intervals\n\n            opacity = 0.7,\n\n            title = \"Population Groups\", position = \"bottomright\")\n\nleaflet_map\n\n### Plot 2\n\n#Loading the libraries\n\nlibrary(dplyr)\n\nlibrary(purrr)\n\nlibrary(highcharter)\n\ndata1 \\<- read.csv(\"countries_population_continents.csv\")\n\n\\# Group the data by continent and summarize the total population for each continent\n\nby_continent \\<- data1 %\\>%\n\n  group_by(Continent) %\\>%\n\n  summarise(Population = sum(Population, na.rm = TRUE), .groups = 'drop')\n\n#Prepare drilldown data for Africa\n\ndrilldown_chart_data \\<- data1 %\\>%\n\n  filter(Continent == \"Africa\") %\\>%\n\n  select(Location, Population) %\\>%\n\n  mutate(\n\n    name = Location,\n\n    y = Population\n\n  ) %\\>%\n\n  select(name, y) %\\>%\n\n  list_parse() \n\n\\# Create the main Highcharts visualization\n\nhighchart() %\\>%\n\n  hc_chart(type = \"column\") %\\>%\n\n  hc_title(text = \"Population Drilldown by Continent and Country\") %\\>%\n\n  hc_subtitle(text = \"Click a continent to see the countries\") %\\>%\n\n  hc_xAxis(type = \"category\") %\\>%\n\n  hc_yAxis(title = list(text = \"Population\")) %\\>%\n\n  \\# Add the main series for continents\n\n  hc_add_series(\n\n    name = \"Total Population\",\n\n    data = by_continent %\\>%\n\n      mutate(drilldown = Continent) %\\>%\n\n      select(name = Continent, y = Population, drilldown)\n\n  ) %\\>%\n\n  \\# the drilldown feature for Africa\n\n  hc_drilldown(series = list(\n\n    list(\n\n      id = \"Africa\",\n\n      name = \"Countries\",\n\n      data = drilldown_chart_data\n\n    )\n\n  ))\n","srcMarkdownNoYaml":"\n\n## Code for visualizing the negative economic impact of COVID-19 on tourism\n\n### Plot 1\n\n#Reading the csv file into a variable called data\n\ndata = read.csv(\"Data.csv\")\n\n#Filtering the data for the years 2019 and 2020\n\ndata_filtered = data\\[data\\$Year %in% c(2019, 2020), \\]\n\n#Loading the necessary libraries, ggplot2 and plotly\n\nlibrary(ggplot2)\n\nlibrary(plotly)\n\n#Assigning the graph to a variable called plot1. Initializing ggplot and defining the asthetics. geom_bar adds the bar chart to the plot. Year is converted as factor and the bars are filled with colors based on the year\n\nplot1 = ggplot(data_filtered, aes(x = Country, y = Loss.in.Billion, fill = as.factor(Year))) + geom_bar(stat = \"identity\", position = \"dodge\") +\n\n#goem_text adds the labels to the plot. asthetics are defined and the width of the txt labels is adjusted using position_dodge.\n\ngeom_text(aes(label = Loss.in.Billion), position = position_dodge(width = 0.9), vjust = -0.5) + \\# Adjust vertical position of labels\n\n#scale_fill_manual is used to set the colors manually\n\nscale_fill_manual(values = c(\"2019\" = \"purple\", \"2020\" = \"yellow\")) +\n\n#labs is used to add the labels and title to the chart. Theme customizes the appearance of the plot.\n\nlabs(title = \"Loss Comparison by Country for 2019 and 2020\", x = \"Country\", y = \"Loss in Billion\", fill = \"Year\") + theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n#Converting plot1 to an interactive plotly object using ggplotly\n\nplotly_plot = ggplotly(plot1)\n\n#printing the plot\n\nprint(plotly_plot)\n\n### Plot 2\n\n#loading the necessary libraries tidyr, dplyr\n\nlibrary(tidyr)\n\nlibrary(dplyr)\n\n#Reshaping the data\n\ndata_diff = spread(data_filtered, Year, Loss.in.Billion)\n\n#Taking the absolute difference between the years and calculating the loss percentage\n\ndata_diff\\$Loss_Percentage \\<- (abs(data_diff\\$`2020` - data_diff\\$\\`2019\\`) / data_diff\\$`2019`) \\* 100\n\n#Assigning the graph to a variable called plot2. Initializing ggplot and defining the asthetics. reorder() function arranges the countries in ascending orderof their loss percentage.\n\nplot2 = ggplot(data_diff, aes(x = reorder(Country, Loss_Percentage), y = Loss_Percentage, fill = Loss_Percentage)) +\n\n#geom_bar adds the bar chart to the plot. stat = \"identity adds the bars heights corresponds to the values of loss_percenatge. scale_fill_gradient() adds continuous color gradient for bars with lower to higher loss percentage,\n\ngeom_bar(stat = \"identity\") + scale_fill_gradient(low = \"lightblue\", high = \"darkblue\") +\n\n#Adding lables, title and customized theme\n\nlabs(title = \"Comparative Analysis of Loss by Country in Percentage\", x = \"Country\", y = \"Loss (%)\") + label theme(axis.text.x = element_text(angle = 45, hjust = 1), plot.title = element_text(hjust = 0.5)) +\n\n#Adding text labels to the bars. Adjusting the verticle position of the labels using vjust and adding color. The loss_percentage displayed is rounded to one decimal place.\n\ngeom_text(aes(label = round(Loss_Percentage, 1)), vjust = -0.5, color = \"black\") \\# Add values on top of the bars print(plot2)\n\n## Code for List of Countries and Dependencies by Population\n\n### Plot 1\n\n#install all the required libraries\n\nlibrary(leaflet)\n\nlibrary(dplyr)\n\nlibrary(readr)\n\nlibrary(sf)\n\nlibrary(RColorBrewer)\n\nlibrary(htmltools)\n\n#reading the CSV file\n\ndata \\<- read_csv(\"countries_population.csv\",show_col_types = FALSE)\n\n#Cleaning the CSV file\n\ndata\\$Location \\<- gsub(\"\\_\", \" \", data\\$Location)\n\n#Creating the intervals\n\nbins \\<- c(0, 100000, 200000, 300000, 500000,\n\n          3000000, 5000000, 9000000, 11000000,\n\n          16000000, 20000000, 25000000, 40000000,\n\n          60000000, 67000000, 90000000, 200000000,\n\n          400000000, 1500000001)\n\n#Legend\n\nlabels \\<- c(\n\n  \"0 - 100,000\",\n\n  \"100,001 - 200,000\",\n\n  \"200,001 - 300,000\",\n\n  \"300,001 - 500,000\",\n\n  \"500,001 - 3,000,000\",\n\n  \"3,000,001 - 5,000,000\",\n\n  \"5,000,001 - 9,000,000\",\n\n  \"9,000,001 - 11,000,000\",\n\n  \"11,000,001 - 16,000,000\",\n\n  \"16,000,001 - 20,000,000\",\n\n  \"20,000,001 - 25,000,000\",\n\n  \"25,000,001 - 40,000,000\",\n\n  \"40,000,001 - 60,000,000\",\n\n  \"60,000,001 - 67,000,000\",\n\n  \"67,000,001 - 90,000,000\",\n\n  \"90,000,001 - 200,000,000\",\n\n  \"200,000,001 - 400,000,000\",\n\n  \"400,000,001 - 1,500,000,001\"\n\n)\n\ndata\\$population_group \\<- cut(data\\$Population, breaks = bins,\n\n                             include.lowest = TRUE,\n\n                             labels = labels)\n\n\\# We need colours for the number of intervels we have\n\nnum_colors \\<- length(labels)\n\ncolor_palette \\<- colorRampPalette(brewer.pal(9, \"Blues\")) \n\ncolors \\<- color_palette(num_colors)\n\n#Importing the world dataset\n\nworld \\<- st_as_sf(maps::map(\"world\", fill = TRUE, plot = FALSE))\n\n#Left joining the world dataset with our.\n\nworld_data \\<- world %\\>%\n\n  left_join(data, by = c(\"ID\" = \"Location\")) %\\>%\n\n  mutate(color = colors\\[as.numeric(cut(Population, breaks = bins, include.lowest = TRUE))\\])\n\n\\# Visual 1\n\nleaflet_map \\<- leaflet(world_data) %\\>%\n\n  addTiles() %\\>%\n\n  setView(lng = 0, lat = 20, zoom = 2) %\\>%\n\n  addPolygons(fillColor = \\~color,\n\n              weight = 1,\n\n              opacity = 1,\n\n              color = 'white',\n\n              dashArray = '3',\n\n              fillOpacity = 0.7,\n\n              highlightOptions = highlightOptions(\n\n                weight = 5,\n\n                color = '#666',\n\n                dashArray = '',\n\n                fillOpacity = 0.7,\n\n                bringToFront = TRUE),\n\n              label = \\~paste(ID, \"\\<br\\>\",\n\n                             \"Population: \", Population, \"\\<br\\>\",\n\n                             \"% of World: \", \\`%\\_ofworld\\`),\n\n              labelOptions = labelOptions(style = list('font-weight' = 'normal',\n\n                                                       padding = '3px 8px'),\n\n                                          textsize = \"15px\",\n\n                                          direction = \"auto\")) %\\>%\n\n  addLegend(pal = colorFactor(colors, NULL),\n\n            values = \\~population_group,\n\n            labels = labels,  \\# Update labels to show intervals\n\n            opacity = 0.7,\n\n            title = \"Population Groups\", position = \"bottomright\")\n\nleaflet_map\n\n### Plot 2\n\n#Loading the libraries\n\nlibrary(dplyr)\n\nlibrary(purrr)\n\nlibrary(highcharter)\n\ndata1 \\<- read.csv(\"countries_population_continents.csv\")\n\n\\# Group the data by continent and summarize the total population for each continent\n\nby_continent \\<- data1 %\\>%\n\n  group_by(Continent) %\\>%\n\n  summarise(Population = sum(Population, na.rm = TRUE), .groups = 'drop')\n\n#Prepare drilldown data for Africa\n\ndrilldown_chart_data \\<- data1 %\\>%\n\n  filter(Continent == \"Africa\") %\\>%\n\n  select(Location, Population) %\\>%\n\n  mutate(\n\n    name = Location,\n\n    y = Population\n\n  ) %\\>%\n\n  select(name, y) %\\>%\n\n  list_parse() \n\n\\# Create the main Highcharts visualization\n\nhighchart() %\\>%\n\n  hc_chart(type = \"column\") %\\>%\n\n  hc_title(text = \"Population Drilldown by Continent and Country\") %\\>%\n\n  hc_subtitle(text = \"Click a continent to see the countries\") %\\>%\n\n  hc_xAxis(type = \"category\") %\\>%\n\n  hc_yAxis(title = list(text = \"Population\")) %\\>%\n\n  \\# Add the main series for continents\n\n  hc_add_series(\n\n    name = \"Total Population\",\n\n    data = by_continent %\\>%\n\n      mutate(drilldown = Continent) %\\>%\n\n      select(name = Continent, y = Population, drilldown)\n\n  ) %\\>%\n\n  \\# the drilldown feature for Africa\n\n  hc_drilldown(series = list(\n\n    list(\n\n      id = \"Africa\",\n\n      name = \"Countries\",\n\n      data = drilldown_chart_data\n\n    )\n\n  ))\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"output-file":"code.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.5.57","theme":"cosmo","title":"R Code","editor":"visual"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}